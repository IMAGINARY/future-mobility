{"version":3,"sources":["webpack://future-mobility/./node_modules/events/events.js","webpack://future-mobility/./src/sass/default.scss?bcb6","webpack://future-mobility/./src/js/citizen-request-view-mgr.js","webpack://future-mobility/./src/js/citizen-request-view.js","webpack://future-mobility/./src/js/connection-state-view.js","webpack://future-mobility/./src/js/dashboard/actions-pane.js","webpack://future-mobility/./src/js/dashboard/power-up-selector.js","webpack://future-mobility/./src/js/dashboard/titles.js","webpack://future-mobility/./src/js/index-list-view.js","webpack://future-mobility/./src/js/index-view.js","webpack://future-mobility/./src/js/lib/config-helpers.js","webpack://future-mobility/./src/js/lib/random.js","webpack://future-mobility/./src/js/lib/show-fatal-error.js","webpack://future-mobility/./src/js/server-socket-connector.js","webpack://future-mobility/webpack/bootstrap","webpack://future-mobility/webpack/runtime/global","webpack://future-mobility/webpack/runtime/make namespace object","webpack://future-mobility/webpack/runtime/publicPath","webpack://future-mobility/./src/js/main-dashboard.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AChfA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACxJA,OAAO,aAAa,GAAG,mBAAO,CAAC,4CAAc;AAC7C,OAAO,cAAc,GAAG,mBAAO,CAAC,4DAAsB;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kCAAkC;AACzE,WAAW;AACX;AACA;AACA;AACA,qEAAqE,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,4CAA4C,wDAAwD,0BAA0B,YAAY,UAAU;AAC/L,+DAA+D,0BAA0B,eAAe,EAAE,UAAU;AACpH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAwD;AAC/D;;AAEA;;AAEA;;;;;;;;;;;AC9EA,aAAa,mBAAO,CAAC,wFAA2C;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnEA,qBAAqB,mBAAO,CAAC,+CAAQ;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/CA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,OAAO,kBAAkB,GAAG,mBAAO,CAAC,8CAAU;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACnOA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,wBAAwB;AACnC;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;ACzClB,kBAAkB,mBAAO,CAAC,4CAAc;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;;AAEA;;;;;;;;;;;ACpCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB;;;;;;;;;;;ACVlB;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACdA;AACA,qBAAqB,mBAAO,CAAC,+CAAQ;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gDAAgD,sBAAsB;AACtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,aAAa;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;UCjMA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kC;;;;;;;;;;ACfA,mBAAO,CAAC,qDAAsB;AAC9B,uBAAuB,mBAAO,CAAC,gEAAwB;AACvD,sBAAsB,mBAAO,CAAC,sDAAmB;AACjD,8BAA8B,mBAAO,CAAC,sEAA2B;AACjE,4BAA4B,mBAAO,CAAC,kEAAyB;AAC7D,2BAA2B,mBAAO,CAAC,gEAAwB;AAC3D,8BAA8B,mBAAO,CAAC,wEAA4B;AAClE,oBAAoB,mBAAO,CAAC,oEAA0B;AACtD,OAAO,kBAAkB,GAAG,mBAAO,CAAC,wDAAoB;AACxD,wBAAwB,mBAAO,CAAC,8EAA+B;;AAE/D,SAAS,uBAA2B,CAAC,WAAW,oBAAoB;AACpE;AACA;AACA,6CAA6C,kBAAkB;AAC/D;AACA;AACA,GAAG;AACH;AACA,uDAAuD,uBAA2B,CAAC;AACnF,sDAAsD,uBAA2B,CAAC;AAClF;AACA,GAAG;AACH;AACA,gDAAgD,qBAA6B;AAC7E;AACA;AACA;;AAEA;AACA,uCAAuC,iBAAiB;AACxD,sCAAsC,aAAa;AACnD,uDAAuD,KAAK;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG","file":"dashboard.4287c2f966758ad7c3a4.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport {};","class CitizenRequestViewMgr {\n  constructor(citizenRequestView, requestCount = 2) {\n    this.view = citizenRequestView;\n    this.requestCount = requestCount;\n    this.config = this.view.config;\n    this.groups = this.getGroups();\n\n    this.shownRequests = {};\n    this.lastShowTime = {};\n\n    this.minTime = (this.config.citizenRequestView.minTime || 30) * 1000;\n    this.maxTime = (this.config.citizenRequestView.maxTime || 90) * 1000;\n    this.cooldownTime = (this.config.citizenRequestView.cooldownTime || 90) * 1000;\n\n    this.inTestMode = false;\n    window.testCitizenRequestView = () => this.enterTestMode();\n  }\n\n  displayRequest(goalId) {\n    if (this.shownRequests[goalId] === undefined) {\n      this.shownRequests[goalId] = true;\n      this.lastShowTime[goalId] = Date.now();\n      this.view.displayRequest(goalId);\n    }\n  }\n\n  removeRequest(goalId) {\n    if (this.shownRequests[goalId] !== undefined) {\n      delete this.shownRequests[goalId];\n      this.view.removeRequest(goalId);\n    }\n  }\n\n  handleUpdate(goals) {\n    if (this.inTestMode) {\n      return;\n    }\n    const selectedGoals = this.selectElegibleGoals(goals)\n      .slice(0, this.requestCount);\n\n    // Remove goals that are not selected\n    Object.keys(this.shownRequests).forEach((goalId) => {\n      if (!selectedGoals.find(goal => goal.id === goalId)) {\n        this.removeRequest(goalId);\n      }\n    });\n\n    // Add selected goals\n    selectedGoals.forEach((goal) => {\n      this.displayRequest(goal.id);\n    });\n  }\n\n  getGroups() {\n    const answer = {};\n    let id = 0;\n    Object.values(this.config.citizenRequests).forEach((request) => {\n      if (answer[request.group] === undefined) {\n        answer[request.group] = id;\n        id += 1;\n      }\n    });\n    // Add a catch-all group\n    if (answer.others === undefined) {\n      answer.others = id;\n    }\n    return answer;\n  }\n\n  getVisibilityGroup(goal, now) {\n    if (this.lastShowTime[goal.id] === undefined) {\n      return CitizenRequestViewMgr.Timing.NORMAL;\n    }\n\n    const timeSinceShow = now - this.lastShowTime[goal.id];\n    const cooldownEnter = this.maxTime;\n    const cooldownExit = cooldownEnter + this.cooldownTime;\n    if (timeSinceShow < this.minTime) {\n      return CitizenRequestViewMgr.Timing.UNDER_MIN_TIME;\n    }\n    if ((timeSinceShow > cooldownEnter) && (timeSinceShow < cooldownExit)) {\n      return CitizenRequestViewMgr.Timing.IN_COOLDOWN;\n    }\n    return CitizenRequestViewMgr.Timing.NORMAL;\n  }\n\n  selectElegibleGoals(goals) {\n    const interleavedOrder = {};\n    const visibilityGroup = {};\n    const goalsPerGroup = Object.fromEntries(Object.keys(this.groups).map(group => [group, 0]));\n    const now = Date.now();\n\n    const unmetGoals = goals.filter(goal => goal.condition === false);\n\n    unmetGoals.sort((a, b) => (\n      // Sort by \"priority, progress DESC\"\n      (a.priority - b.priority) || (b.progress - a.progress)\n    )).forEach((goal) => {\n      // Assign each goal a visibility group based on the last time it was shown\n      visibilityGroup[goal.id] = this.getVisibilityGroup(goal, now);\n\n      // Assign each goal an order so they are interleaved per group\n      // (cat1, cat2, cat3, cat1, cat2, cat3, etc..) keeping the same\n      // order they had within each category.\n      const group = (this.config.citizenRequests[goal.id]\n        && this.config.citizenRequests[goal.id].group) || 'others';\n      interleavedOrder[goal.id] = this.groups[group] + goalsPerGroup[group] * this.groups.length;\n      goalsPerGroup[group] += 1;\n    });\n\n    return unmetGoals\n      .sort((a, b) => (\n        // Sort by visible time, then interleaved order\n        (visibilityGroup[a.id] - visibilityGroup[b.id])\n        || (interleavedOrder[a.id] - interleavedOrder[b.id])\n      ));\n  }\n\n  enterTestMode() {\n    this.inTestMode = true;\n    const allRequests = Object.keys(this.config.citizenRequests);\n    let i = 0;\n    const showOne = (index) => {\n      Object.keys(this.shownRequests).forEach((goalId) => {\n        this.removeRequest(goalId);\n      });\n      this.displayRequest(allRequests[index]);\n    };\n\n    showOne(0);\n    $(window).on('keydown', (ev) => {\n      if (ev.key === 'ArrowLeft') {\n        if (i > 0) {\n          i -= 1;\n        }\n        showOne(i);\n      } else if (ev.key === 'ArrowRight') {\n        if (i < (allRequests.length - 1)) {\n          i += 1;\n          showOne(i);\n        }\n      }\n    });\n  }\n}\n\nCitizenRequestViewMgr.Timing = {\n  UNDER_MIN_TIME: 0,\n  NORMAL: 1,\n  IN_COOLDOWN: 2,\n};\n\nmodule.exports = CitizenRequestViewMgr;\n","const { randomItem } = require('./lib/random');\nconst { getTileType } = require('./lib/config-helpers');\n\nclass CitizenRequestView {\n  constructor(config) {\n    this.config = config;\n    this.languages = this.config.dashboard.languages;\n    this.mainLanguage = this.languages[0];\n\n    this.$element = $('<div></div>')\n      .addClass('citizen-requests');\n\n    this.requests = {};\n\n    this.tileColors = Object.fromEntries(\n      Object.entries(CitizenRequestView.tileReferences)\n        .map(([key, type]) => [key, getTileType(this.config, type).color])\n    );\n  }\n\n  displayRequest(goalId) {\n    if (this.requests[goalId] === undefined && this.config.citizenRequests[goalId] !== undefined) {\n      this.requests[goalId] = $('<div></div>')\n        .addClass('request')\n        .append($('<div></div>').addClass('request-person')\n          .css({\n            'background-image': `url(${this.getRandomCitizenIcon(goalId)})`,\n          }))\n        .append($('<div></div>').addClass('request-balloon')\n          .append(\n            this.languages.map(lang => (\n              $('<div></div>').addClass(`request-text request-text-${lang}`)\n                .addClass(lang === this.mainLanguage ? 'request-text-main' : 'request-text-translation')\n                .html(this.formatRequestText(this.config.citizenRequests[goalId][lang]))\n            ))\n          )\n        )\n        .appendTo(this.$element);\n    }\n  }\n\n  removeRequest(goalId) {\n    if (this.requests[goalId] !== undefined) {\n      this.requests[goalId].remove();\n      delete this.requests[goalId];\n    }\n  }\n\n  getRandomCitizenIcon(goalId) {\n    const urgent = this.config.citizenRequests[goalId].urgent || false;\n    const icons = urgent ? this.config.citizenIcons.urgent : this.config.citizenIcons.regular;\n    return randomItem(icons);\n  }\n\n  formatRequestText(text) {\n    return text\n      .replaceAll(CitizenRequestView.tileRefRegexp, (match, tileSpec, innerText) => (\n        // `<span class=\"tileref tileref-${CitizenRequestView.tileReferences[tileSpec]}\"><span class=\"tileref-stub\" style=\"background-color: ${this.tileColors[tileSpec]}\"></span> ${innerText}</span>`\n        `<span class=\"tileref-stub\" style=\"background-color: ${this.tileColors[tileSpec]}\"></span>&nbsp;${innerText}`\n      ))\n      .replaceAll(CitizenRequestView.largeTextRegexp, '<span class=\"large\">$1</span>');\n  }\n}\n\nCitizenRequestView.tileReferences = {\n  W: 'water',\n  P: 'park',\n  R: 'residential',\n  C: 'commercial',\n  I: 'industrial',\n  X: 'road',\n};\nCitizenRequestView.tileRefRegexp = new RegExp(\n  `([${Object.keys(CitizenRequestView.tileReferences).join('')}])\\\\[([^\\\\]]+)\\\\]`, 'g'\n);\n\nCitizenRequestView.largeTextRegexp = /\\*([^*]+)\\*/g;\n\nmodule.exports = CitizenRequestView;\n","const icon = require('../../static/fa/broadcast-tower-solid.svg');\n\nclass ConnectionStateView {\n  constructor(connector) {\n    this.$element = $('<div></div>')\n      .addClass('connection-state-view');\n\n    this.$icon = $('<img>')\n      .attr('src', icon)\n      .addClass('connection-state-view-icon')\n      .appendTo(this.$element);\n\n    this.$errorMessage = $('<div></div>')\n      .addClass('connection-state-view-error text-danger')\n      .appendTo(this.$element);\n    this.$errorStatus = $('<div></div>')\n      .addClass('connection-state-view-status')\n      .appendTo(this.$element);\n\n    connector.events.on('closing', this.handleClosing.bind(this));\n    connector.events.on('disconnect', this.handleDisconnect.bind(this));\n    connector.events.on('connectWait', this.handleConnectWait.bind(this));\n    connector.events.on('connecting', this.handleConnecting.bind(this));\n    connector.events.on('connect', this.handleConnect.bind(this));\n  }\n\n  show() {\n    this.$element.addClass('visible');\n  }\n\n  hide() {\n    this.$element.removeClass('visible');\n  }\n\n  setErrorMessage(message) {\n    this.$errorMessage.html(message);\n  }\n\n  setErrorStatus(status) {\n    this.$errorStatus.html(status);\n  }\n\n  handleClosing() {\n    this.setErrorMessage('Retrying connection');\n    this.setErrorStatus('');\n    this.show();\n  }\n\n  handleDisconnect() {\n    this.setErrorMessage('Disconnected from server');\n    this.setErrorStatus('');\n    this.show();\n  }\n\n  handleConnectWait() {\n    this.setErrorStatus('Waiting to reconnect...');\n  }\n\n  handleConnecting() {\n    this.setErrorStatus('Connecting...');\n  }\n\n  handleConnect() {\n    this.hide();\n  }\n}\n\nmodule.exports = ConnectionStateView;\n","const EventEmitter = require('events');\n\nclass ActionsPane {\n  constructor(config) {\n    this.config = config;\n    this.$element = $('<div></div>').addClass('actions-pane');\n    this.disabled = false;\n    const languages = this.config.dashboard.languages;\n    const mainLanguage = languages[0];\n\n    this.buttons = this.config.dashboard.actions.buttons.map(button => (\n      $('<button></button>')\n        .attr('type', 'button')\n        .addClass(`btn btn-block btn-dashboard-action btn-${button.id}`)\n        .append(languages.map(lang => (\n          $('<span></span>')\n            .addClass(`text text-${lang}`)\n            .addClass(lang === mainLanguage ? 'text-main' : 'text-translation')\n            .html(button.text[lang])))\n        )\n        .attr('id', button.id)\n    ));\n\n    this.$element.append(\n      $('<div></div>').addClass('row justify-content-center align-items-center')\n        .append(\n          this.buttons.map(button => (\n            $('<div>')\n              .addClass('col-5')\n              .append(button)))\n        )\n    );\n  }\n\n  disableAll() {\n    this.disabled = true;\n    this.buttons.forEach(button => button.attr('disabled', true));\n    this.buttons.forEach(button => button.addClass('disabled'));\n  }\n\n  enableAll() {\n    this.disabled = false;\n    this.buttons.forEach(button => button.attr('disabled', false));\n    this.buttons.forEach(button => button.removeClass('disabled'));\n  }\n}\n\nmodule.exports = ActionsPane;\n","const EventEmitter = require('events');\nconst { bindCreateTitle } = require('./titles');\n\nclass PowerUpSelector {\n  constructor(config, buttonContainer, statusContainer, selectionPageContainer) {\n    this.config = config;\n    this.selectorTimeout = null;\n    this.events = new EventEmitter();\n    this.activePowerUps = [];\n    this.lastActivePowerUps = [];\n    this.languages = this.config.dashboard.languages;\n    this.mainLanguage = this.languages[0];\n    const createTitle = bindCreateTitle(this.languages);\n\n\n    this.selectButton = $('<button></button>')\n      .attr('type', 'button')\n      .addClass('btn btn-block btn-dashboard-action btn-power-ups-activate')\n      .append(this.languages.map(lang => (\n          $('<span></span>')\n            .addClass(`text text-${lang}`)\n            .addClass(lang === this.mainLanguage ? 'text-main' : 'text-translation')\n            .html(this.config.dashboard.powerUps.button.text[lang]\n      ))))\n      .on('click', () => {\n        this.setSelectablePowerUps(this.pickSelectablePowerUps());\n        this.activateCloseTimeout();\n        this.openSelector();\n      })\n      .appendTo($(buttonContainer));\n\n    this.statusElement = $('<div></div>')\n      .addClass('powerups-selection')\n      .appendTo($(statusContainer));\n\n    this.optionContainers = [];\n    for (let i = 0; i < 3; i += 1) {\n      this.optionContainers.push($('<div></div>').addClass('powerup-container'));\n    }\n\n    $(selectionPageContainer).find('.powerups-selector-main')\n      .append(createTitle(this.config.dashboard.powerUps.title))\n      .append($('<div></div>').addClass('row')\n        .append(this.optionContainers.map(container => (\n          $('<div></div>').addClass('col-md-4 h-100 col-powerup-selector-item')\n            .append(container)))));\n\n    $(selectionPageContainer).find('.powerups-selector-bottom')\n      .append(\n        $('<button></button>')\n          .attr('type', 'button')\n          .addClass('btn btn-block btn-dashboard-action btn-cancel')\n          .append(\n            this.languages.map(lang => (\n              $('<span></span>')\n                .addClass(`text text-${lang}`)\n                .addClass(lang === this.mainLanguage ? 'text-main' : 'text-translation')\n                .html(this.config.dashboard.powerUps.cancelButton.text[lang])\n            ))\n          )\n          .on('click', () => {\n            this.cancelCloseTimeout();\n            this.closeSelector();\n          })\n      );\n\n    this.update([]);\n  }\n\n  updateSelectButton() {\n    if (this.activePowerUps.length >= 2 || this.isSelectorOpen()) {\n      this.disableSelectButton();\n    } else {\n      this.enableSelectButton();\n    }\n  }\n\n  disableSelectButton() {\n    this.selectButton.attr('disabled', true);\n    this.selectButton.addClass('disabled');\n  }\n\n  enableSelectButton() {\n    this.selectButton.attr('disabled', false);\n    this.selectButton.removeClass('disabled');\n  }\n\n  setSelectablePowerUps(powerUpIds) {\n    this.optionContainers.forEach((container, i) => {\n      $(container).empty();\n      if (powerUpIds[i] !== undefined) {\n        $(container).append(this.renderPowerUp(powerUpIds[i]));\n      }\n    });\n  }\n\n  pickSelectablePowerUps() {\n    const hideLastActive = this.config.dashboard.powerUps.selector.hideLastActive;\n\n    return Object.keys(this.config.powerUps)\n      .filter(id => !(this.config.powerUps[id].enabled === false))\n      .filter(id => !(this.activePowerUps.includes(id)))\n      .map(id => [id, (hideLastActive && this.lastActivePowerUps.includes(id) ? 1 : 0) + Math.random()])\n      .sort(([, recentA], [, recentB]) => recentA - recentB)\n      .map(([id]) => id)\n      .slice(0, 3);\n  }\n\n  renderPowerUp(powerUpId) {\n    const props = this.config.powerUps[powerUpId];\n    return (\n      $('<div></div>').addClass('powerup')\n        .attr('type', 'button')\n        .append($('<div></div>').addClass('title')\n          .append(\n            this.languages.map(lang => (\n              $('<div></div>').addClass(`text text-${lang}`)\n                .addClass(lang === this.mainLanguage ? 'text-main' : 'text-translation')\n                .html(props.title[lang])\n            ))\n          )\n        )\n        .append($('<div></div>').addClass('image')\n          .attr('style', `background-image: url('static/powerups/${powerUpId}.svg')`))\n        .append($('<div></div>').addClass('description')\n          .append(\n            this.languages.map(lang => (\n              $('<div></div>').addClass(`text text-${lang}`)\n                .addClass(lang === this.mainLanguage ? 'text-main' : 'text-translation')\n                .html(props.description[lang])\n            ))\n          )\n        )\n        .on('click', () => {\n          this.events.emit('enable', powerUpId);\n          this.disableSelectButton();\n          this.cancelCloseTimeout();\n          this.closeSelector();\n        })\n    );\n  }\n\n  renderPowerUpThumb(powerUpId) {\n    const props = this.config.powerUps[powerUpId];\n    return (\n      $('<div></div>').addClass('powerup')\n        .attr('type', 'button')\n        .append($('<div></div>').addClass('title')\n          .append(\n            this.languages.map(lang => (\n              $('<div></div>').addClass(`text text-${lang}`)\n                .addClass(lang === this.mainLanguage ? 'text-main' : 'text-translation')\n                .html(props.title[lang])\n            ))\n          )\n        )\n        .append($('<button></button>').attr('type', 'button')\n          .addClass('btn btn-block btn-power-ups-disable')\n          .append(\n            this.languages.map(lang => (\n              $('<span></span>').addClass(`text text-${lang}`)\n              .addClass(lang === this.mainLanguage ? 'text-main' : 'text-translation')\n                .html(this.config.dashboard.powerUps.disableButton.text[lang])\n          )))\n          .on('click', () => {\n            this.events.emit('disable', powerUpId);\n          }))\n    );\n  }\n\n  isSelectorOpen() {\n    return $('body').attr('data-show-slide') === '2';\n  }\n\n  openSelector() {\n    $('body').attr('data-show-slide', '2');\n    this.updateSelectButton();\n  }\n\n  closeSelector() {\n    $('body').attr('data-show-slide', '1');\n    this.updateSelectButton();\n  }\n\n  cancelCloseTimeout() {\n    if (this.selectorTimeout !== null) {\n      clearTimeout(this.selectorTimeout);\n      this.selectorTimeout = null;\n    }\n  }\n\n  activateCloseTimeout() {\n    this.cancelCloseTimeout();\n    this.selectorTimeout = setTimeout(() => {\n      this.selectorTimeout = null;\n      this.closeSelector();\n    }, this.config.dashboard.powerUps.selector.timeout * 1000);\n  }\n\n  update(activePowerUps) {\n    this.lastActivePowerUps\n      .push(...this.activePowerUps.filter(id => !activePowerUps.includes(id)));\n    this.lastActivePowerUps = this.lastActivePowerUps.slice(-2);\n    this.activePowerUps = activePowerUps;\n\n    this.statusElement.empty();\n    if (activePowerUps.length === 0) {\n      this.statusElement.append(\n        $('<div></div>').addClass('no-selection')\n          .append(\n            this.languages.map(lang => (\n              $('<div></div>').addClass(`text text-${lang}`)\n                .addClass(lang === this.mainLanguage ? 'text-main' : 'text-translation')\n                .html(this.config.dashboard.powerUps.noneActive.text[lang])\n            ))\n          )\n      );\n    } else {\n      this.statusElement.append(\n        activePowerUps.map(powerUpId => this.renderPowerUpThumb(powerUpId))\n      );\n    }\n\n    this.updateSelectButton();\n  }\n}\n\nmodule.exports = PowerUpSelector;\n","/**\n * Create a multi-language title for the dashboard\n *\n * @param {string[]} languages\n *  Ordered list of languages to use in the title\n * @param {Object.<string, string>} texts\n *  Object with the texts for the title in different languages\n * @return {*|jQuery}\n */\nfunction createTitle(languages, texts) {\n  const $answer = $('<div></div>')\n    .addClass('dashboard-title');\n\n  const mainLang = languages[0];\n  const allTextsAreEqual = languages.every(lang => texts[lang] === texts[mainLang]);\n\n  if (allTextsAreEqual) {\n    $answer.append($('<h2>').text(texts[mainLang]));\n  } else {\n    // Append the title in each language\n    $answer.append(languages.map(lang => {\n      return $(lang === mainLang ? '<h2>' : '<div>')\n        .addClass(lang === mainLang ? 'dashboard-title-main' : 'dashboard-title-translation')\n        .text(texts[lang]);\n    }))\n  }\n\n  return $answer;\n}\n\n/**\n * Create a copy of createTitle with the languages bound\n *\n * @param {string[]} languages\n *  Ordered list of languages to use in titles\n * @return {function(Object.<string, string>): *|jQuery}\n */\nfunction bindCreateTitle(languages) {\n  return createTitle.bind(null, languages);\n}\n\nmodule.exports = { createTitle, bindCreateTitle };\n","const IndexView = require('./index-view');\n\nclass IndexListView {\n  constructor(config) {\n    this.config = config;\n    this.$element = $('<div></div>')\n      .addClass('index-list');\n\n    this.variableRankViews = Object.fromEntries(\n      Object.entries(config.variables)\n        .map(([id, def]) => [id, new IndexView(this.config, id, def)])\n    );\n\n    this.$element.append(\n      $('<div></div>').addClass('variables')\n        .append(...Object.values(this.variableRankViews).map(view => view.$element))\n    );\n  }\n\n  setValues(varValues) {\n    Object.entries(varValues).forEach(([id, value]) => {\n      if (this.variableRankViews[id] !== undefined) {\n        this.variableRankViews[id].setValue(value);\n      }\n    });\n  }\n}\n\nmodule.exports = IndexListView;\n","class IndexView {\n  constructor(config, id, definition) {\n    this.config = config;\n    this.id = id;\n    this.definition = definition;\n    this.languages = this.config.dashboard.languages;\n    this.mainLanguage = this.languages[0];\n    this.value = null;\n    this.$valueElement = $('<div></div>').addClass('value');\n    this.$element = $('<div></div>')\n      .addClass(['index', `index-${this.id}`])\n      .append([\n        $('<div></div>').addClass('description')\n          .append(\n            this.languages.map(lang => (\n              $('<div></div>')\n                .addClass(`name name-${lang}`)\n                .addClass(lang === this.mainLanguage ? 'name-main' : 'name-translation')\n                .text(this.definition.name[lang])\n            ))\n          ),\n        this.$valueElement,\n      ]);\n  }\n\n  setValue(value) {\n    if (value !== this.value) {\n      if (this.value !== null) {\n        this.$element.removeClass(`value-${this.value}`);\n      }\n      this.value = value;\n      this.$element.addClass(`value-${this.value}`);\n    }\n  }\n}\n\nmodule.exports = IndexView;\n","function getTileTypeId(config, type) {\n  const entry = Object.entries(config.tileTypes).find(([, props]) => props.type === type);\n  return entry ? Number(entry[0]) : null;\n}\n\nfunction getTileType(config, type) {\n  const entry = Object.entries(config.tileTypes).find(([, props]) => props.type === type);\n  return entry ? entry[1] : null;\n}\n\nmodule.exports = { getTileTypeId, getTileType };\n","/**\n * Create a function that picks an element from a set where each has a probability weight.\n *\n * The returned function can be called repeatedly to pick random elements.\n *\n * @param {[any, number]} weightedOptions\n *  An array of options. Each option is an array where the first\n *  item is the element, and the second is the weight.\n * @return {function(): any}\n *  Returns a function that returns a random element.\n */\nfunction weightedRandomizer(weightedOptions) {\n  let last = 0;\n  const ranges = new Array(weightedOptions.length);\n  // ranges = [from, to, value]\n  weightedOptions.forEach(([value, weight], i) => {\n    ranges[i] = [last, last + weight, value];\n    last += weight;\n  });\n\n  return () => {\n    const rndP = Math.random() * last;\n    return ranges.find(([min, max]) => rndP > min && rndP < max)[2];\n  };\n}\n\nfunction randomItem(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nmodule.exports = {\n  weightedRandomizer,\n  randomItem,\n};\n","function showFatalError(text, error) {\n  $('<div></div>')\n    .addClass('fatal-error')\n    .append($('<div></div>')\n      .addClass('fatal-error-text')\n      .html(text))\n    .append($('<div></div>')\n      .addClass('fatal-error-details')\n      .html(error.message))\n    .appendTo('body');\n\n  $('html').addClass('with-fatal-error');\n}\n\nmodule.exports = showFatalError;\n","/* eslint-disable no-console */\nconst EventEmitter = require('events');\n\nconst PING_TIME = 1000 * 10;\nconst PONG_WAIT_TIME = 1000 * 10;\nconst RECONNECT_TIME = 1000 * 5;\n\nclass ServerSocketConnector {\n  constructor(uri) {\n    this.uri = uri;\n    this.ws = null;\n    this.connected = false;\n    this.isClosing = false; // Must track because the socket might enter CLOSING state and not close immediately\n    this.events = new EventEmitter();\n    this.pingTimeout = null;\n    this.pongTimeout = null;\n    this.reconnectTimeout = null;\n    this.connect();\n  }\n\n  connect() {\n    this.cancelPing();\n    this.cancelReconnect();\n\n    this.events.emit('connecting');\n    console.log(`Connecting to ${this.uri}...`);\n    this.ws = new WebSocket(this.uri);\n    this.ws.onopen = this.handleOpen.bind(this);\n    this.ws.onclose = this.handleClose.bind(this);\n    this.ws.onmessage = this.handleMessage.bind(this);\n    // ws.onerror is not handled because the event gives no data about the\n    // error, and on a connection failure onclose will be called.\n\n    this.connected = false;\n  }\n\n  cancelReconnect() {\n    if (this.reconnectTimeout !== null) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = null;\n    }\n  }\n\n  reconnect() {\n    this.cancelReconnect();\n    this.reconnectTimeout = setTimeout(() => {\n      this.reconnectTimeout = null;\n      this.connect();\n    }, RECONNECT_TIME);\n    this.events.emit('connectWait');\n    console.log(`Will attempt to reconnect in ${RECONNECT_TIME / 1000} seconds...`);\n  }\n\n  handleOpen() {\n    this.cancelReconnect();\n    this.cancelPongTimeout();\n\n    this.connected = true;\n    this.isClosing = false;\n    console.log('Connected.');\n    this.events.emit('connect');\n    this.schedulePing();\n  }\n\n  handleClose(ev) {\n    this.connected = false;\n    this.isClosing = false;\n    this.cancelPing();\n    this.cancelPongTimeout();\n    // ev.code is defined here https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n    // but according to people the only code one normally gets is 1006 (Abnormal Closure)\n    console.error(\n      `Disconnected with code ${ev.code}`,\n      ev.code === 1006 ? ': Abnormal closure' : '',\n      ev.reason ? `(reason: ${ev.reason})` : ''\n    );\n    this.events.emit('disconnect');\n    this.reconnect();\n  }\n\n  handleMessage(ev) {\n    const message = JSON.parse(ev.data);\n    if (message.type === 'map_update') {\n      this.events.emit('map_update', message.cells);\n    } else if (message.type === 'vars_update') {\n      this.events.emit('vars_update', message.variables);\n    } else if (message.type === 'goals_update') {\n      this.events.emit('goals_update', message.goals);\n    } else if (message.type === 'view_show_map_var') {\n      this.events.emit('view_show_map_var', message.variable, message.data);\n    } else if (message.type === 'power_ups_update') {\n      this.events.emit('power_ups_update', message.powerUps);\n    } else if (message.type === 'pong') {\n      this.handlePong();\n    }\n  }\n\n  handlePong() {\n    this.cancelPongTimeout();\n    this.schedulePing();\n  }\n\n  send(data) {\n    const message = typeof data === 'string' ? { type: data } : data;\n    this.ws.send(JSON.stringify(message));\n  }\n\n  cancelPing() {\n    if (this.pingTimeout !== null) {\n      clearTimeout(this.pingTimeout);\n      this.pingTimeout = null;\n    }\n  }\n\n  schedulePing() {\n    this.cancelPing();\n    this.pingTimeout = setTimeout(() => {\n      this.pingTimeout = null;\n      this.ping();\n    }, PING_TIME);\n  }\n\n  cancelPongTimeout() {\n    if (this.pongTimeout !== null) {\n      clearTimeout(this.pongTimeout);\n      this.pongTimeout = null;\n    }\n  }\n\n  startPongTimeout() {\n    this.cancelPongTimeout();\n    this.pongTimeout = setTimeout(() => {\n      this.pongTimeout = null;\n      console.warn(`PONG not received after ${PONG_WAIT_TIME / 1000} seconds`);\n      console.warn('Closing connection');\n      if (!this.isClosing) {\n        this.isClosing = true;\n        this.events.emit('closing');\n      }\n      this.ws.close();\n    }, PONG_WAIT_TIME);\n  }\n\n  ping() {\n    this.send('ping');\n    this.startPongTimeout();\n  }\n\n  getMap() {\n    this.send('get_map');\n  }\n\n  setMap(cells) {\n    this.send({\n      type: 'set_map',\n      cells,\n    });\n  }\n\n  getVars() {\n    this.send('get_vars');\n  }\n\n  getGoals() {\n    this.send('get_goals');\n  }\n\n  viewShowMapVariable(variable) {\n    this.send({\n      type: 'view_show_map_var',\n      variable,\n    });\n  }\n\n  enablePowerUp(powerUpId) {\n    this.send({\n      type: 'enable_power_up',\n      powerUpId,\n    });\n  }\n\n  disablePowerUp(powerUpId) {\n    this.send({\n      type: 'disable_power_up',\n      powerUpId,\n    });\n  }\n\n  getActivePowerUps() {\n    this.send('get_active_power_ups');\n  }\n}\n\nmodule.exports = ServerSocketConnector;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","require('../sass/default.scss');\nconst showFatalError = require('./lib/show-fatal-error');\nconst IndexListView = require('./index-list-view');\nconst ServerSocketConnector = require('./server-socket-connector');\nconst ConnectionStateView = require('./connection-state-view');\nconst CitizenRequestView = require('./citizen-request-view');\nconst CitizenRequestViewMgr = require('./citizen-request-view-mgr');\nconst ActionsPane = require('./dashboard/actions-pane');\nconst { bindCreateTitle } = require('./dashboard/titles');\nconst PowerUpSelector = require('./dashboard/power-up-selector');\n\nfetch(`${process.env.SERVER_HTTP_URI}/config`, { cache: 'no-store' })\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error. Status: ${ response.status }`);\n    }\n    return response.json();\n  })\n  .catch((err) => {\n    showFatalError(`Error loading configuration from ${process.env.SERVER_HTTP_URI}`, err);\n    console.error(`Error loading configuration from ${process.env.SERVER_HTTP_URI}`);\n    throw err;\n  })\n  .then((config) => {\n    const connector = new ServerSocketConnector(process.env.SERVER_SOCKET_URI);\n    const languages = config.dashboard.languages;\n    const mainLanguage = languages[0];\n    const createTitle = bindCreateTitle(languages);\n\n    $('.dashboard')\n      .addClass(`with-language-count-${languages.length}`)\n      .addClass(`with-main-language-${mainLanguage}`)\n      .addClass(languages.map(lang => `with-language-${lang}`).join(' '));\n\n    const citizenRequestView = new CitizenRequestView(config);\n    $('#col-1')\n      .append(createTitle(config.dashboard.goals.title))\n      .append(citizenRequestView.$element);\n    const citizenRequestViewMgr = new CitizenRequestViewMgr(citizenRequestView);\n\n    const indexListView = new IndexListView(config);\n    $('#col-2')\n      .append(createTitle(config.dashboard.status.title))\n      .append(indexListView.$element);\n    indexListView.setValues({\n      'traffic-density': 0,\n      'travel-times': 0,\n      safety: 0,\n      pollution: 0,\n      noise: 0,\n      'green-spaces': 0,\n    });\n\n    $('#col-3')\n      .append(createTitle(config.dashboard.powerUps.title))\n\n    const actionsPane = new ActionsPane(config);\n    $('#col-actions').append(actionsPane.$element);\n    actionsPane.buttons.forEach($button => $button.on('click', (ev) => {\n      const actionId = ev.currentTarget.id;\n      if ((actionId === 'show-pollution' || actionId === 'show-noise')) {\n        actionsPane.disableAll();\n\n        setTimeout(() => {\n          actionsPane.enableAll();\n        }, (config.variableMapOverlay.overlayDuration\n          + config.variableMapOverlay.transitionDuration) * 1000);\n\n        connector.viewShowMapVariable(actionId.replace('show-', ''));\n      }\n      ev.stopPropagation();\n    }));\n\n    const powerUpSelector = new PowerUpSelector(config,\n      $('#col-actions-powerup'), $('#col-3'), $('#slide-2'));\n    powerUpSelector.events.on('enable', (powerUpId) => {\n      connector.enablePowerUp(powerUpId);\n    });\n    powerUpSelector.events.on('disable', (powerUpId) => {\n      connector.disablePowerUp(powerUpId);\n    });\n\n    connector.events.on('vars_update', (variables) => {\n      indexListView.setValues(variables);\n    });\n    connector.events.on('goals_update', (goals) => {\n      citizenRequestViewMgr.handleUpdate(goals);\n    });\n    connector.events.on('power_ups_update', (activePowerUps) => {\n      powerUpSelector.update(activePowerUps);\n    });\n    connector.events.on('connect', () => {\n      connector.getVars();\n      connector.getGoals();\n      connector.getActivePowerUps();\n      actionsPane.enableAll();\n    });\n\n    const connStateView = new ConnectionStateView(connector);\n    $('body').append(connStateView.$element);\n  })\n  .catch((err) => {\n    console.error(err);\n  });\n"],"sourceRoot":""}